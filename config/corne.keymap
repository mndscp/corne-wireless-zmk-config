/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>

/ {
    combos {
        compatible = "zmk,combos";

        close {
            bindings = <&kp LC(W)>;
            key-positions = <15 28>;
        };
    };

    behaviors {
        hmr: hmr {
            compatible = "zmk,behavior-hold-tap";
            label = "homerow mod right";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <320>;
            flavor = "tap-preferred";
            hold-trigger-key-positions = <0 1 2 4 5 12 13 14 15 16 17 24 25 26 27 28 29 36 37 38 3 39 40 41>;
            hold-trigger-on-release;
        };

        hml: hml {
            compatible = "zmk,behavior-hold-tap";
            label = "HML";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <320>;
            flavor = "tap-preferred";
            hold-trigger-on-release;
            hold-trigger-key-positions = <6 7 8 9 10 11 18 19 20 21 22 23 30 31 32 33 34 35 39 40 41 36 37 38>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        base {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  Q  |  W  |  E  |  R  |  T  |   |  Y  |  U   |  I  |  O  |  P  | BKSP |
            // | CTRL |  A  |  S  |  D  |  F  |  G  |   |  H  |  J   |  K  |  L  |  ;  |  '   |
            // | SHFT |  Z  |  X  |  C  |  V  |  B  |   |  N  |  M   |  ,  |  .  |  /  | ESC  |
            //                    | GUI | LWR | SPC |   | ENT | RSE  | ALT |

            bindings = <
&lt 3 TAB     &kp Q            &kp W            &lt 2 E       &kp R              &kp T          &kp Y        &kp U               &kp I         &kp O            &kp P               &kp BSPC
&lt 4 ESCAPE  &hml LEFT_GUI A  &hml LEFT_ALT S  &hml LCTRL D  &hml LEFT_SHIFT F  &kp G          &kp H        &hmr RIGHT_SHIFT J  &hmr LCTRL K  &hmr LEFT_ALT L  &hmr LEFT_GUI SEMI  &kp SQT
&sk LSHFT     &kp Z            &kp X            &kp C         &kp V              &kp B          &kp N        &kp M               &kp COMMA     &kp DOT          &kp FSLH            &kp ESC
                                                &trans        &mo 0              &lt 1 SPACE    &lt 5 SPACE  &caps_word          &kp RALT
            >;
        };

        navigation {
            bindings = <
&kp PRINTSCREEN  &kp LS(LC(C))  &kp LS(TAB)          &kp SPACE            &kp TAB               &kp LA(TAB)      &kp LEFT_PARENTHESIS  &kp BSPC   &kp UP     &kp DEL    &kp RPAR  &trans
&trans           &kp LG(Y)      &mt LEFT_ALT ESCAPE  &mt LCTRL BACKSPACE  &mt LEFT_SHIFT ENTER  &kp LC(D)        &kp HOME              &kp LEFT   &kp DOWN   &kp RIGHT  &kp END   &trans
&trans           &trans         &kp LC(Y)            &kp LC(Z)            &kp DEL               &kp LS(LC(D))    &trans                &kp LC(C)  &kp LC(V)  &kp LC(X)  &trans    &trans
                                                     &trans               &trans                &trans           &trans                &trans     &trans
            >;
        };

        numbers {
            bindings = <
&trans  &trans  &trans  &trans  &kp SPACE             &trans    &trans    &kp N7   &kp N8     &kp N9  &trans    &trans
&trans  &trans  &trans  &trans  &mt LEFT_SHIFT SPACE  &trans    &kp LPAR  &kp N4   &kp N5     &kp N6  &kp RPAR  &trans
&trans  &trans  &trans  &trans  &trans                &trans    &trans    &kp N1   &kp N2     &kp N3  &trans    &trans
                        &trans  &trans                &trans    &kp N0    &kp DOT  &kp COMMA
            >;
        };

        tab {
            bindings = <
&none   &kp LA(LC(LG(Q)))  &kp LG(LC(LA(W)))  &kp LG(LC(LA(E)))  &kp LG(LC(LA(R)))  &kp LG(LC(LA(T)))    &trans  &trans  &trans  &trans  &trans  &trans
&trans  &kp LG(LC(LA(A)))  &kp LG(LC(LA(S)))  &kp LG(LC(LA(D)))  &kp LG(LC(LA(F)))  &kp LG(LC(LA(G)))    &trans  &trans  &trans  &trans  &trans  &trans
&trans  &kp LG(LC(LA(Z)))  &kp LG(LC(LA(X)))  &kp LG(LC(LA(C)))  &kp LG(LC(LA(V)))  &kp LG(LC(LA(B)))    &trans  &trans  &trans  &trans  &trans  &trans
                                              &trans             &kp LC(LS(N))      &kp F12              &trans  &trans  &trans
            >;
        };

        escape {
            bindings = <
&trans  &kp LC(Q)  &kp LC(W)  &kp LC(E)  &kp LC(R)  &kp LC(T)    &trans  &trans  &trans  &trans  &trans  &trans
&none   &kp LC(A)  &kp LC(S)  &kp LC(D)  &kp LC(F)  &kp LC(G)    &trans  &trans  &trans  &trans  &trans  &trans
&trans  &kp LC(Z)  &kp LC(X)  &kp LC(C)  &kp LC(V)  &kp LC(B)    &trans  &trans  &trans  &trans  &trans  &trans
                              &trans     &trans     &trans       &trans  &trans  &trans
            >;
        };

        symbols {
            bindings = <
&trans  &trans  &kp AT     &kp EXCL   &kp DQT    &kp LBKT    &kp RBKT  &kp AMPS  &kp ASTRK  &kp TILDE  &trans  &trans
&trans  &trans  &kp HASH   &kp QMARK  &kp SQT    &kp LPAR    &kp RPAR  &kp DLLR  &kp PRCNT  &kp CARET  &trans  &trans
&trans  &trans  &kp SLASH  &kp COLON  &kp GRAVE  &kp LBRC    &kp RBRC  &kp LT    &kp EQUAL  &kp GT     &trans  &trans
                           &trans     &trans     &kp RET     &trans    &trans    &trans
            >;
        };
    };
};
