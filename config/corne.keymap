/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>

/ {
    keymap {
        compatible = "zmk,keymap";

        base {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  Q  |  W  |  E  |  R  |  T  |   |  Y  |  U   |  I  |  O  |  P  | BKSP |
            // | CTRL |  A  |  S  |  D  |  F  |  G  |   |  H  |  J   |  K  |  L  |  ;  |  '   |
            // | SHFT |  Z  |  X  |  C  |  V  |  B  |   |  N  |  M   |  ,  |  .  |  /  | ESC  |
            //                    | GUI | LWR | SPC |   | ENT | RSE  | ALT |

            bindings = <
&kp TAB    &kp Q  &kp W  &kp E     &kp R  &kp T        &kp Y    &kp U  &kp I      &kp O    &kp P     &kp BSPC
&kp LCTRL  &kp A  &kp S  &kp D     &kp F  &kp G        &kp H    &kp J  &kp K      &kp L    &kp SEMI  &kp SQT
&kp LSHFT  &kp Z  &kp X  &kp C     &kp V  &kp B        &kp N    &kp M  &kp COMMA  &kp DOT  &kp FSLH  &kp ESC
                         &kp LGUI  &mo 0  &kp SPACE    &kp RET  &mo 0  &kp RALT
            >;
        };

        navigation {
            bindings = <
&trans  &kp LS(LC(C))  &kp LS(TAB)          &kp SPACE            &kp TAB               &kp LA(TAB)      &trans    &kp BSPC   &kp UP     &kp DEL    &trans      &trans
&trans  &kp LG(Y)      &mt LEFT_ALT ESCAPE  &mt LCTRL BACKSPACE  &mt LEFT_SHIFT ENTER  &kp LC(D)        &kp HOME  &kp LEFT   &kp DOWN   &kp RIGHT  &kp END     &trans
&trans  &kp PAGE_DOWN  &kp LC(Y)            &kp LC(Z)            &kp DEL               &kp LS(LC(D))    &trans    &kp LC(C)  &kp LC(V)  &kp LC(X)  &kp LC(N0)  &trans
                                            &trans               &trans                &trans           &trans    &trans     &trans
            >;
        };

        numbers {
            bindings = <
&trans  &trans  &trans  &trans  &trans          &trans    &trans        &kp N7   &kp N8     &kp N9  &trans        &trans
&trans  &trans  &trans  &trans  &kp LEFT_SHIFT  &trans    &kp LS(LPAR)  &kp N4   &kp N5     &kp N6  &kp LS(RPAR)  &trans
&trans  &trans  &trans  &trans  &trans          &trans    &trans        &kp N1   &kp N2     &kp N3  &trans        &trans
                        &trans  &trans          &trans    &kp N0        &kp DOT  &kp COMMA
            >;
        };
    };
};
